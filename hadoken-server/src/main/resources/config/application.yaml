spring:
  servlet:
    context-path: /hadoken
  application:
    name: hadoken-server
  main:
    allow-bean-definition-overriding: true
  freemarker:
    check-template-location: false
  profiles:
    active: dev
  jackson:
    time-zone: GMT+8
  data:
    redis:
      repositories:
        enabled: false

  # 配置 Jpa
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

generator:
  enabled: true
hadoken:
  info:
    version: 1.0.0
    base-package: pers.guangjian.hadoken
  web:
    admin-api:
      prefix: /hadoken
      controller: '**.rest.**'
    app-api:
      prefix: /
      controller: '**.rest.**'
    admin-ui:
      url: http://localhost:8080 # Admin 管理后台 UI 的地址
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: ${hadoken.info.version}
    base-package: ${hadoken.info.base-package}
  captcha:
    timeout: 5m
    width: 160
    height: 60
  codegen:
    base-package: ${hadoken.info.base-package}
    db-schemas: ${spring.datasource.dynamic.datasource.master.name}
  error-code: # 错误码相关配置项
    constants-class-list:
      - cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants
      - cn.iocoder.yudao.module.infra.enums.ErrorCodeConstants
      - cn.iocoder.yudao.module.member.enums.ErrorCodeConstants
      - cn.iocoder.yudao.module.pay.enums.ErrorCodeConstants
      - cn.iocoder.yudao.module.system.enums.ErrorCodeConstants
      - cn.iocoder.yudao.module.tool.enums.ErrorCodeConstants
  tenant: # 多租户相关配置项
    tables: # 配置需要开启多租户的表；如果实体已经继承 TenantBaseDO 类，则无需重复配置
  sms-code: # 短信验证码相关的配置项
    expire-times: 10m
    send-frequency: 1m
    send-maximum-quantity-per-day: 10
    begin-code: 9999 # 这里配置 9999 的原因是，测试方便。
    end-code: 9999 # 这里配置 9999 的原因是，测试方便。
